// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TimesheetDaysService.Models;

namespace TimesheetDaysService.Migrations
{
    [DbContext(typeof(TimeSheetDayContext))]
    [Migration("20200705100003_AddTimesheetDB")]
    partial class AddTimesheetDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TimeSheetService.Models.EmployeeData", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("EmployeeGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeIdentifier")
                        .HasColumnType("text");

                    b.HasKey("EmployeeId");

                    b.ToTable("EmployeeData");
                });

            modelBuilder.Entity("TimeSheetService.Models.EntryAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("EntryAudit");
                });

            modelBuilder.Entity("TimeSheetService.Models.EventData", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("TimesheetDayId")
                        .HasColumnType("integer");

                    b.HasKey("EventId");

                    b.HasIndex("TimesheetDayId");

                    b.ToTable("EventData");
                });

            modelBuilder.Entity("TimeSheetService.Models.HrAmount", b =>
                {
                    b.Property<int>("MultiplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Hours")
                        .HasColumnType("real");

                    b.Property<int?>("TimesheetDayId")
                        .HasColumnType("integer");

                    b.HasKey("MultiplierID");

                    b.HasIndex("TimesheetDayId");

                    b.ToTable("HrAmount");
                });

            modelBuilder.Entity("TimeSheetService.Models.TimesheetDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EntryAuditId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TimeSheetID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EntryAuditId");

                    b.ToTable("TImeSheetDayItems");
                });

            modelBuilder.Entity("TimeSheetService.Models.EventData", b =>
                {
                    b.HasOne("TimeSheetService.Models.TimesheetDay", null)
                        .WithMany("EventList")
                        .HasForeignKey("TimesheetDayId");
                });

            modelBuilder.Entity("TimeSheetService.Models.HrAmount", b =>
                {
                    b.HasOne("TimeSheetService.Models.TimesheetDay", null)
                        .WithMany("hrAmountsList")
                        .HasForeignKey("TimesheetDayId");
                });

            modelBuilder.Entity("TimeSheetService.Models.TimesheetDay", b =>
                {
                    b.HasOne("TimeSheetService.Models.EmployeeData", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TimeSheetService.Models.EntryAudit", "EntryAudit")
                        .WithMany()
                        .HasForeignKey("EntryAuditId");
                });
#pragma warning restore 612, 618
        }
    }
}
